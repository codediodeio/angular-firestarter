service cloud.firestore {
  match /databases/{database}/documents {
    match /adminUsers/{userId} {
      allow read: if isSignedIn();
      allow write: if false;
    }

    match /seasons/{id} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }

    match /playerQuests/{id} {
      allow read: if isOwnerOrTeamLead();
      allow write: if isQuestWriteAllowed();
    }

    match /playerPoints/{id} {
      allow read: if true;
      allow write: if isTeamLead(incomingData().teamId);
    }

    match /teams/{id} {
      allow read: if isSignedIn();
      allow write: if false;
    }

    /// Functions ///

    // Current DB record of document being requested
    function existingData() {
      return resource.data;
    }

    // Passed request data
    function incomingData() {
      return request.resource.data;
    }

    function currentUser() {
      return request.auth;
    }

    function isSignedIn() {
     return currentUser() != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function getTeamData(teamId) {
      return get(/databases/$(database)/documents/teams/$(teamId)).data;
    }

    function isOwner(userId) {
      return currentUser().uid == userId;
    }

    function isTeamLead(teamId) {
      return getTeamData(teamId).lead == currentUser().uid;
    }

    function isOwnerOrTeamLead() {
      return isOwner(existingData().playerId) || isTeamLead(existingData().teamId);
    }

    function isQuestWriteAllowed() {
      return isTeamLead(incomingData().teamId) || (
        isOwner(existingData().playerId) &&
        incomingData().keys().hasOnly(['status', 'submitted', 'completed', 'completionProof']) &&
        incomingData().status == 'pending'
      );
    }

    function isTeamMember() {
      return getUserData(currentUser().uid).team.id == existingData().tid;
    }

    function getAdminData(userId) {
      return get(/databases/$(database)/documents/adminUsers/$(userId)).data;
    }

    function isAdmin() {
      return getAdminData(currentUser().uid).uid == currentUser().uid &&
        incomingData().updated_by.uid == currentUser().uid;
    }
  }
}
